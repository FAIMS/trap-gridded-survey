<?xml version="1.0" encoding="utf-8"?>
<module suppressWarnings="true">

<Login f="nodata">
  <Login f="noscroll">
    <User_Name t="list" f="user" l="Control"/>
  </Login>
</Login>

<Control f="nodata">
  <Main>
    <Add_New_Site t="button" l="Site"/>
    <Number_of_Rows    b="decimal"/>
    <Number_of_Walkers b="decimal"/>
  </Main>
  <search/>
</Control>

<!--Bingo bango, it's a mango-->
<Site>
  <Site>
    <ID f="id"/>
  </Site>

  <Row_1  f="hidden"/>
  <Row_2  f="hidden"/>
  <Row_3  f="hidden"/>
  <Row_4  f="hidden"/>
  <Row_5  f="hidden"/>
  <Row_6  f="hidden"/>
  <Row_7  f="hidden"/>
  <Row_8  f="hidden"/>
  <Row_9  f="hidden"/>
  <Row_10 f="hidden"/>

  <Vars f="hidden">
    <Number_of_Rows/>
    <Number_of_Walkers/>
  </Vars>
</Site>

<logic><![CDATA[
  getRowTabRefs() {
    String  refNumberOfRows   = "Site/Vars/Number_of_Rows";
    String  numberOfRows      = getFieldValue(refNumberOfRows);
    Integer numberOfRowsAsInt = 0;
    try {
      numberOfRowsAsInt = Integer.valueOf(numberOfRows);
    } catch (Exception e) { ; }

    return getRowTabRefs(numberOfRowsAsInt);
  }
  getRowTabRefs(Integer numberOfRows) {
    List refs = new ArrayList();
    for (Integer i = 1; i <= numberOfRows; i++) {
      String ref = getRowTabRef(i);
      refs.add(ref);
    }
    return refs;
  }
  getRowTabRef(Integer rowNumber) {
    String fmtRefRow = "Site/Row_%s";
    String refRow    = replaceFirst(fmtRefRow, "%s", rowNumber.toString());
    return refRow;
  }

  showRowTabs() {
    for (ref : getRowTabRefs()) {
      showTab(ref);
    }
  }

  hideRowTabs() {
    for (ref : getRowTabRefs(10)) cancelTab(ref, false);
  }

  getWalkerRefs() {
    List allRefs = new ArrayList();
    for (refRowTab: getRowTabRefs()) {
      List someRefs = getWalkerRefs(refRowTab);
      allRefs.addAll(someRefs);
    }
    return allRefs;
  }
  getWalkerRefs(String refRowTab) {
    String  refNumberOfWalkers   = "Site/Vars/Number_of_Walkers";
    String  numberOfWalkers      = getFieldValue(refNumberOfWalkers);
    Integer numberOfWalkersAsInt = 0;
    try {
      numberOfWalkersAsInt = Integer.valueOf(numberOfWalkers);
    } catch (Exception e) { ; }

    return getWalkerRefs(refRowTab, numberOfWalkersAsInt);
  }
  getWalkerRefs(String refRowTab, Integer numberOfWalkers) {
    List refs = new ArrayList();
    for (Integer i = 1; i <= numberOfWalkers; i++) {
      String ref = getWalkerRef(refRowTab, i);
      refs.add(ref);
    }
    return refs;
  }
  getWalkerRef(String refRowTab, Integer walkerNumber) {
    String walkerNumberAsString = walkerNumber.toString();
    return getWalkerRef(refRowTab, walkerNumberAsString);
  }
  getWalkerRef(String refRowTab, String walkerNumber) {
    String fmtRefWalker = refRowTab + "/Walker_%s";
    String refWalker    = replaceFirst(fmtRefWalker, "%s", walkerNumber);
    return refWalker;
  }

  showWalkerFields() {
    for (ref : getWalkerRefs()) {
     showWalkerField(ref);
    }
  }
  showWalkerField(String refWalker) {
    String o = "orientation";
    String e = "even";

    createContainer(refWalker       , o);
    createContainer(refWalker + "_l", e, refWalker);
    createContainer(refWalker + "_r", e, refWalker);

    // TODO: Number the refs properly
    createView(getTab(refWalker) + "_lt", createViewDef().createTextField(), refWalker + "_l");
    createView(getTab(refWalker) + "_lt", createViewDef().createTextField(), refWalker + "_r");
  }


  onCreateSite() {
    copyFieldValue(
      "Control/Main/Number_of_Rows",
      "Site/Vars/Number_of_Rows"
    );
    copyFieldValue(
      "Control/Main/Number_of_Walkers",
      "Site/Vars/Number_of_Walkers"
    );
  }

  addOnEvent("Site", "show", "onShowSite()");
  onShowSite() {
    hideRowTabs();
    showRowTabs();
    showWalkerFields();
  }
]]></logic>

</module>
